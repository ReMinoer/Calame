<UserControl x:Class="Calame.UserControls.CalameTreeView"
             x:Name="This"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:utils="clr-namespace:Calame.Utils"
             xmlns:userControls="clr-namespace:Calame.UserControls"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:attachedProperties="clr-namespace:Calame.AttachedProperties"
             xmlns:behaviors="clr-namespace:Calame.Behaviors"
             xmlns:icons="clr-namespace:Calame.Icons"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="200">
    <DockPanel DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
        <DockPanel DockPanel.Dock="Top">
            <StackPanel DockPanel.Dock="Left"
                        Orientation="Horizontal">
                <Button Padding="4" Command="{Binding CollapseAllCommand}">
                    <userControls:CalameIcon IconSize="12"
                                             Width="12"
                                             Target="{x:Static icons:CalameIconKey.CollapseAll}"
                                             IconProvider="{Binding IconProvider}"
                                             IconDescriptor="{Binding IconDescriptor}" />
                </Button>
                <Button Padding="4" Command="{Binding ExpandAllCommand}">
                    <userControls:CalameIcon IconSize="12"
                                             Width="12"
                                             Target="{x:Static icons:CalameIconKey.ExpandAll}"
                                             IconProvider="{Binding IconProvider}"
                                             IconDescriptor="{Binding IconDescriptor}" />
                </Button>
                <Button Padding="4" Command="{Binding FocusSelectionCommand}">
                    <userControls:CalameIcon IconSize="12"
                                             Width="12"
                                             Target="{x:Static icons:CalameIconKey.ShowSelection}"
                                             IconProvider="{Binding IconProvider}"
                                             IconDescriptor="{Binding IconDescriptor}" />
                </Button>
            </StackPanel>
            <userControls:FilterTextBox Text="{Binding FilterText, Mode=TwoWay}"
                                        IconProvider="{Binding IconProvider}"
                                        IconDescriptor="{Binding IconDescriptor}" />
        </DockPanel>
        <TreeView ItemsSource="{Binding TreeItems}"
                  Background="White"
                  attachedProperties:Focus.IsFocused="{Binding IsTreeViewFocused}">
            <b:Interaction.Behaviors>
                <behaviors:TreeViewBindableSelectedItemBehavior SelectedItem="{Binding SelectedTreeItem, Mode=TwoWay}" />
            </b:Interaction.Behaviors>
            <TreeView.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#C4D5FF" />
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />
            </TreeView.Resources>
            <TreeView.ItemsPanel>
                <ItemsPanelTemplate>
                    <utils:VirtualizingStackPanel/>
                </ItemsPanelTemplate>
            </TreeView.ItemsPanel>
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="Focusable" Value="True" />
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="Visibility" Value="Visible" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                            <Setter Property="Focusable" Value="False" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsHeader}" Value="True">
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding VisibleForFilter}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsTriggered}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                                        To="#B5E5B0"
                                                        Duration="0:0:0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                                        From="#B5E5B0" To="#00B5E5B0"
                                                        Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                    <Style.Resources>
                        <Style TargetType="Border">
                            <Setter Property="Grid.ColumnSpan" Value="2" />
                        </Style>
                    </Style.Resources>
                </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}" DataType="{x:Type utils:ITreeViewItemModel}">
                    <Border Padding="2">
                        <DockPanel>
                            <userControls:CalameIcon DockPanel.Dock="Left"
                                                     Margin="0 0 3 0"
                                                     IconDescription="{Binding IconDescription}"
                                                     IconSize="14"
                                                     IconProvider="{Binding IconProvider, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type userControls:CalameTreeView}}}"
                                                     VerticalAlignment="Center" />
                            <TextBlock Text="{Binding DisplayName}" FontWeight="{Binding FontWeight}" Background="Transparent">
                                <b:Interaction.Behaviors>
                                    <behaviors:TextBlockHighlightFilteredBehavior ItemText="{Binding DisplayName}"
                                                                                  FilterText="{Binding FilterText, ElementName=This}"
                                                                                  HighlightBackground="Gold"/>
                                </b:Interaction.Behaviors>
                                <TextBlock.Style>
                                    <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding VisibleAsParent}" Value="True">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsDisabledByParent}" Value="True" />
                                                    <Condition Binding="{Binding TreeContext.DisableChildrenIfParentDisabled, ElementName=This}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </DockPanel>
                    </Border>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
    </DockPanel>
</UserControl>
